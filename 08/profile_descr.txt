Профилировнаие вызовов:

    Был создан класс LCSP, решающий одноменную проблему.

    Из листинга вызовов видно, что наибольшее время уходит на иницализацию объектов, 
в которой вызывается метод вычисления длины LCS. В нем существенное время уходит 
на функции вычисления максимума и длины строки(каждый раз в циклах). Также можно 
заметить, что на генерацию строк уходит существенное время из-за вызова генератора 
случайных чисел и внутренней работы функции join.

Профилирование памяти:

    В функции load в начале были созданы ключи в словаре, чтобы в дальнейшем
основные затраты памяти относились к созданным классам. Из листинга видно, что
создание слабых ссылок, а уж тем более классов со слотами дают существенный
выигрыш по памяти.
